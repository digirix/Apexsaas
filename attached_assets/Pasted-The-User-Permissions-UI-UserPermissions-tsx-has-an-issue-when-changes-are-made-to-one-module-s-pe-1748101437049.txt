The User Permissions UI (UserPermissions.tsx) has an issue: when changes are made to one module's permissions (but not saved), then another module is selected, and then the user navigates back to the first module, the unsaved changes are lost and the form often resets to 'Restricted Access' or its last saved state.
Objective: Prevent loss of unsaved changes when switching modules or make the save/discard behavior explicit.
Implement the following refinement in UserPermissions.tsx:
Track Original Loaded State:
When selectedModule changes and permissionForm is populated (either from fetched permissions or to default "Restricted" values), store this initial state. For example, in a new state variable like originalLoadedPermissionForSelectedModule.
Detect Unsaved Changes:
Create a helper function hasUnsavedChanges() that compares the current permissionForm state with originalLoadedPermissionForSelectedModule.
Handle Module Switching:
Modify the onClick handler for selecting a module (e.g., in a new function handleModuleSelect(newModuleId)).
Before calling setSelectedModule(newModuleId):
If hasUnsavedChanges() is true for the currently selected module:
Use a confirm() dialog: "You have unsaved changes for [Current Module]. Save them now?"
If "OK" (Save): Call handleSavePermission(). Ideally, only switch to the new module after the save is successful (e.g., in the onSuccess callback of permissionMutation).
If "Cancel" (Discard): Do nothing to the unsaved changes; proceed to set the new module (the form will then reload for the new module, effectively discarding changes for the old one).
(Optional: a third "Cancel Switch" option to stay on the current module)
If no unsaved changes, or if user chose to discard, then call setSelectedModule(newModuleId).
This will make the UI more robust by explicitly handling unsaved changes before navigating away from a modified permission set. Ensure the useEffect that populates permissionForm based on selectedModule and permissions correctly re-initializes both permissionForm and originalLoadedPermissionForSelectedModule